{"version":3,"sources":["components/CustomerAdd.js","components/CustomerDelete.js","components/Customer.js","App.js","serviceWorker.js","index.js"],"names":["CustomerAdd","props","handleFormSubmit","e","preventDefault","addCustomer","then","response","console","log","data","stateRefresh","setState","file","userName","birthDay","gender","job","fileName","modalOpen","handleFileChange","target","files","value","handleValueChange","nextState","name","formData","FormData","append","state","post","headers","handleClickAdd","handleClickClose","classes","this","Button","style","backgroundColor","variant","color","onClick","Dialog","open","onClose","DialogTitle","DialogContent","className","hidden","accept","id","type","onChange","htmlFor","component","TextField","label","DialogActions","Component","withStyles","display","CustomerDelete","handleClickDelete","fetch","method","size","onClost","Typography","gutterBottom","deleteCustomer","Customer","TableRow","TableCell","src","image","maxWidth","maxHeight","birthday","styles","theme","root","width","minWidth","paper","marginLeft","marginRight","tableHead","fontSize","progress","margin","spacing","menuButton","title","flexGrow","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","App","customers","loaded","searchKeyword","callApi","res","catch","err","a","json","timer","setInterval","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","InputBase","placeholder","input","marginTop","marginButtom","Paper","Table","table","TableHead","map","c","TableBody","filter","indexOf","key","colSpan","align","CircularProgress","Boolean","window","location","hostname","match","createMuiTheme","typography","fontFamily","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bbc7aeca.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { post } from 'axios'\r\nimport { Dialog, DialogActions, DialogTitle, DialogContent, TextField, Button, withStyles } from '@material-ui/core'\r\n\r\nconst styles = e => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\nclass CustomerAdd extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            userName: '',\r\n            birthDay: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            modalOpen: false\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.addCustomer()\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.props.stateRefresh();\r\n            })\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthDay: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            modalOpen: false\r\n        })\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files[0], // it's maybe binary or hex numbers of the image which is unknown\r\n            fileName: e.target.value\r\n        })\r\n    }\r\n    handleValueChange = (e) => {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n    addCustomer = () => {\r\n        const url = '/api/customers';\r\n        const formData = new FormData();\r\n        formData.append('imageUploaded', this.state.file); // image byte data\r\n        formData.append('name', this.state.userName);\r\n        formData.append('birthday', this.state.birthDay);\r\n        formData.append('gender', this.state.gender);\r\n        formData.append('job', this.state.job);\r\n        // when you sending data and if it has a file (ex. image), you need to add this below\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url, formData, config);\r\n    }\r\n    handleClickAdd = () => {\r\n        this.setState({\r\n            modalOpen: true\r\n        })\r\n    }\r\n    handleClickClose = () => {\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthDay: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            modalOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Button style={{ backgroundColor: '#8b00ff' }} variant=\"contained\" color=\"primary\" onClick={this.handleClickAdd}>\r\n                    Add New Client\r\n                 </Button>\r\n                <Dialog open={this.state.modalOpen} onClose={this.handleClickClose}>\r\n                    <DialogTitle>NEW Client</DialogTitle>\r\n                    <DialogContent>\r\n                        <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} />\r\n                        <label htmlFor=\"raised-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\r\n                                {this.state.fileName === \"\" ? \"Add Image\" : this.state.fileName}\r\n                            </Button>\r\n                        </label>\r\n                        <br />\r\n                        <TextField label=\"Name\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} />\r\n                        <br />\r\n                        <TextField label=\"Date of Birth\" type=\"text\" name=\"birthDay\" value={this.state.birthDay} onChange={this.handleValueChange} />\r\n                        <br />\r\n                        <TextField label=\"Gender\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} />\r\n                        <br />\r\n                        <TextField label=\"Occupation\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}> Add </Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickClose}> Close </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CustomerAdd);","import React, { Component } from 'react'\r\nimport { Typography, Dialog, DialogActions, DialogTitle, DialogContent, Button } from '@material-ui/core'\r\nexport default class CustomerDelete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false\r\n        }\r\n    }\r\n    deleteCustomer(id) {\r\n        const url = '/api/customers/' + id;\r\n        fetch(url, {\r\n            method: 'DELETE'\r\n        });\r\n        this.props.stateRefresh();\r\n    }\r\n    handleClickDelete = () => {\r\n        this.setState({\r\n            modalOpen: true\r\n        })\r\n    }\r\n    handleClickClose = () => {\r\n        this.setState({\r\n\r\n            modalOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={this.handleClickDelete}>Delete</Button>\r\n                <Dialog open={this.state.modalOpen} onClost={this.handleClickClose}>\r\n                    <DialogTitle onClose={this.handleClickClose}>\r\n                        Delete\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <Typography gutterBottom>\r\n                            Are you sure deleting this client?\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={(e) => { this.deleteCustomer(this.props.id) }}>Delete</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickClose}>Close</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { TableRow, TableCell } from '@material-ui/core'\r\nimport CustomerDelete from './CustomerDelete'\r\nexport default class Customer extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <TableRow>\r\n                    <TableCell>{this.props.id}</TableCell>\r\n                    <TableCell><img src={this.props.image} style={{ maxWidth: 64, maxHeight: 64 }} /></TableCell>\r\n                    <TableCell>{this.props.name}</TableCell>\r\n                    <TableCell>{this.props.birthday}</TableCell>\r\n                    <TableCell>{this.props.gender}</TableCell>\r\n                    <TableCell>{this.props.job}</TableCell>\r\n                    <TableCell>\r\n                        <CustomerDelete stateRefresh={this.props.stateRefresh} id={this.props.id} /></TableCell>\r\n                </TableRow>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport CustomerAdd from './components/CustomerAdd';\nimport './App.css';\nimport Customer from './components/Customer';\nimport {\n  CircularProgress, TableBody, Table, TableHead, TableRow,\n  TableCell, withStyles, Paper, AppBar, Toolbar, IconButton,\n  Typography, InputBase, fade\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    minWidth: 1080\n  },\n  paper: {\n    marginLeft: 18,\n    marginRight: 18\n  },\n  tableHead: {\n    fontSize: '1.0rem'\n  },\n  progress: {\n    margin: theme.spacing(2)\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  }\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: \"\",\n      loaded: 0,\n      searchKeyword: ''\n    }\n  }\n  stateRefresh = () => {\n    this.setState({\n      customers: '',\n      loaded: 0,\n      searchKeyword: ''\n    });\n    //Calling api from server\n    this.callApi()\n      .then(res => this.setState({ customers: res }))\n      .catch(err => console.log(err));\n  }\n  componentDidMount() {\n    // set timer to keep run progress method every 0.02 sec.\n    this.timer = setInterval(this.progress, 20);\n\n    //Calling api from server\n    this.callApi()\n      .then(res => this.setState({ customers: res }))\n      .catch(err => console.log(err));\n  }\n  // method for calling server\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const data = await response.json();\n    return data;\n  }\n  // method for progress bar\n  progress = () => {\n    const { loaded } = this.state;\n    this.setState({ loaded: loaded >= 100 ? 0 : loaded + 1 })\n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n  render() {\n    const filteredClient = (data) => {\n      data = data.filter((c) => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      })\n      return data.map((c) => {\n        return <Customer stateRefresh={this.stateRefresh} key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job}></Customer>\n      })\n    }\n    const { classes } = this.props;\n    const cellList = [\"No\", \"Image\", \"Name\", \"Date of Birth\", \"Gender\", \"Occupation\", \"Edit\"];\n    return (\n      <div className={styles.root}>\n        {/* Search bar Section */}\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Client Management\n          </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search Name\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                name=\"searchKeyword\"\n                value={this.state.searchKeyword}\n                onChange={this.handleValueChange}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n        {/*  End of Search bar Section */}\n\n        {/* Add Button (the ACTUALLY button property is in 'CustomerAdd' component) */}\n        <div style={{ marginTop: 15, marginButtom: 15, display: 'flex', justifyContent: 'center' }}>\n          <CustomerAdd stateRefresh={this.stateRefresh} />\n        </div>\n        <Paper >\n          <Table className={styles.table}>\n            <TableHead>\n              <TableRow>\n                {/* Populate the table header names */}\n                {cellList.map(c => {\n                  return <TableCell className={classes.tableHead}>{c}</TableCell>\n                })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                this.state.customers ? filteredClient(this.state.customers) :\n                  // if customers data is still in loading or false then prompt loading icon\n                  <TableRow>\n                    <TableCell colSpan=\"6\" align=\"center\">\n                      <CircularProgress className={classes.progress} variant=\"determinate\" value={this.state.loaded} />\n                    </TableCell>\n                  </TableRow>\n              }\n            </TableBody>\n          </Table>\n        </Paper>\n\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Balsamiq Sans\", cursive'\n  }\n})\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}